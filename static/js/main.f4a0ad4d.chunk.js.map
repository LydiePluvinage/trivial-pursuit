{"version":3,"sources":["components/TrivialQuestion.js","components/TrivialGame.js","components/Menu.js","components/Header.js","components/Difficulty.js","components/GameSelection.js","App.js","index.js"],"names":["TrivialQuestion","props","useState","answerGiven","setAnswerGiven","className","question","answers","map","item","i","onClick","style","correctAnswer","correct","backgroundColor","text","TrivialGame","category","useParams","difficulty","questions","setQuestions","useEffect","getQuestions","a","console","log","axios","get","results","questionsList","push","data","myresult","parser","DOMParser","parseFromString","documentElement","textContent","correct_answer","incorrect_answers","length","shuffleArray","array","j","Math","floor","random","temp","Menu","href","Header","src","alt","Difficulty","styleDifficulty","id","GameSelection","CategoriesList","setCategoriesList","difficultyChosen","setDifficultyChosen","urlAPI","categoriesList","trivia_categories","getCategoriesList","to","name","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4a0ad4d.chunk.js","sourcesContent":["import './TrivialQuestion.css';\nimport React, { useState } from 'react';\n\nconst TrivialQuestion = (props) => {\n  const [answerGiven, setAnswerGiven] = useState(false);\n\n  function styleAnswer(correctAnswer) {\n    return answerGiven\n      ? correctAnswer\n        ? { backgroundColor: 'green' }\n        : { backgroundColor: 'red' }\n      : { backgroundColor: 'blueviolet' };\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game__question\">{props.question}</div>\n\n      <ul className=\"game__answers\"></ul>\n      {props.answers.map((item, i) => (\n        <li\n          className=\"game__answer\"\n          key={i}\n          onClick={() => setAnswerGiven(true)}\n          style={styleAnswer(item.correct)}\n        >\n          {item.text}\n        </li>\n      ))}\n    </div>\n  );\n};\n\nexport default TrivialQuestion;\n","import axios from 'axios';\nimport './TrivialGame.css';\nimport TrivialQuestion from './TrivialQuestion';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\n\nconst TrivialGame = () => {\n  const { category } = useParams();\n  const { difficulty } = useParams();\n  const [questions, setQuestions] = useState([]);\n\n  useEffect(() => {\n    // fetches questions from Trivial Pursuit API and stores them in questions state for display\n    const getQuestions = async () => {\n      console.log(difficulty);\n      const results = await axios.get(\n        `https://opentdb.com/api.php?amount=10&category=${category}&type=multiple&difficulty=${difficulty}`\n      );\n      let questionsList = [];\n      questionsList.push(\n        results.data.results.map((myresult) => {\n          let answers;\n\n          const parser = new DOMParser();\n\n          const question = {\n            category: myresult.category,\n            question: parser.parseFromString(myresult.question, 'text/html')\n              .documentElement.textContent, // parse questions to display html characters\n          };\n\n          answers = [\n            {\n              text: parser.parseFromString(myresult.correct_answer, 'text/html')\n                .documentElement.textContent,\n              correct: true,\n            },\n          ];\n\n          //add incorrect questions and shuffle\n          for (var i = 0; i < myresult.incorrect_answers.length; i++) {\n            answers.push({\n              text: parser.parseFromString(\n                myresult.incorrect_answers[i],\n                'text/html'\n              ).documentElement.textContent,\n            });\n          }\n\n          shuffleArray(answers);\n\n          question.answers = answers;\n\n          return question;\n        })\n      );\n      setQuestions(questionsList[0]);\n    };\n\n    //shuffles the array of answers\n    const shuffleArray = (array) => {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n    };\n\n    getQuestions();\n  }, [category, difficulty]);\n\n  let i = 0;\n  return (\n    <div>\n      {questions.map((question) => (\n        <TrivialQuestion\n          question={question.question}\n          answers={question.answers}\n          key={i++}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TrivialGame;\n","import './Menu.css';\n\nfunction Menu() {\n  return (\n    <ul className=\"menu__list\">\n      <a href=\"\\\">\n        <li className=\"menu\">Jouer</li>\n      </a>\n    </ul>\n  );\n}\n\nexport default Menu;\n","import './Header.css';\nimport Menu from './Menu';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"header__content\">\n        <a href=\"\\\">\n          <img src=\"./logo200.png\" className=\"header__logo\" alt=\"logo\" />\n        </a>\n        <h1>Trivial Pursuit</h1>\n        <Menu />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import './Difficulty.css';\nimport React from 'react';\n\nconst Difficulty = (props) => {\n  function styleDifficulty(id) {\n    return props.difficulty === id\n      ? { backgroundColor: 'green' }\n      : { backgroundColor: 'red' };\n  }\n\n  return (\n    <div className=\"difficulty\">\n      <div className=\"difficulty__content\">\n        <button\n          className=\"difficulty__button\"\n          style={styleDifficulty('easy')}\n          onClick={() => props.onClick('easy')}\n        >\n          Easy\n        </button>\n\n        <button\n          className=\"difficulty__button\"\n          style={styleDifficulty('medium')}\n          onClick={() => props.onClick('medium')}\n        >\n          Medium\n        </button>\n        <button\n          className=\"difficulty__button\"\n          style={styleDifficulty('hard')}\n          onClick={() => props.onClick('hard')}\n        >\n          Hard\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Difficulty;\n","import './GameSelection.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Difficulty from './Difficulty';\nimport { NavLink } from 'react-router-dom';\n\nconst GameSelection = () => {\n  const [CategoriesList, setCategoriesList] = useState([]);\n  const [difficultyChosen, setDifficultyChosen] = useState('medium');\n\n  const urlAPI = 'https://opentdb.com/api_category.php';\n  useEffect(() => {\n    // fetches categories list and their id\n    const getCategoriesList = async () => {\n      const categoriesList = await axios.get(urlAPI);\n\n      setCategoriesList(categoriesList.data.trivia_categories);\n    };\n    getCategoriesList();\n  }, [urlAPI]);\n\n  function changeDifficulty(id) {\n    setDifficultyChosen(id);\n  }\n\n  return (\n    <>\n      <Difficulty difficulty={difficultyChosen} onClick={changeDifficulty} />\n      <div className=\"categories\">\n        <ul className=\"categories__content\">\n          {CategoriesList.map((category) => (\n            <NavLink\n              className=\"categories__link\"\n              key={category.id}\n              to={\n                '/category/' + category.id + '/difficulty/' + difficultyChosen\n              }\n            >\n              <li key={category.id}>{category.name}</li>\n            </NavLink>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default GameSelection;\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport TrivialGame from './components/TrivialGame';\nimport Header from './components/Header';\nimport './App.css';\nimport GameSelection from './components/GameSelection';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"App__main\">\n        <Router>\n          <Switch>\n            <Route path=\"/category/:category/difficulty/:difficulty\">\n              <TrivialGame />\n            </Route>\n            <Route path=\"/category/:category\">\n              <TrivialGame />\n            </Route>\n            <Route path=\"/\">\n              <GameSelection />\n            </Route>\n          </Switch>\n        </Router>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}